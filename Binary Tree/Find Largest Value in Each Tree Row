/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
        vector<int> ans;
        if (root == NULL) {
            return ans;
        }
        int i, maxValue, size;
        queue<TreeNode*> q;
        q.push(root);
        while (!q.empty()) {
            maxValue = INT_MIN;
            size = q.size();
            for (i = 0; i <= size - 1; i++) {
                maxValue = max(maxValue, q.front() -> val);
                if (q.front() -> left != NULL) {
                    q.push(q.front() -> left);
                }
                if (q.front() -> right != NULL) {
                    q.push(q.front() -> right);
                }
                q.pop();
            }
            ans.push_back(maxValue);
        }
        return ans;
    }
};